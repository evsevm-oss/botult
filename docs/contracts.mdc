## Контракты: DTO/ошибки/события

### DTO (минимум)
- UserDTO: `id`, `tg_id`, `lang`, `created_at`
- ProfileDTO: `user_id`, `sex`, `age`, `height_cm`, `weight_kg`, `activity_level`, `goal`
- MealItemDTO: `name`, `amount`, `unit`, `kcal`, `protein_g`, `fat_g`, `carb_g`, `confidence`
- MealDTO: `id`, `user_id`, `datetime`, `type`, `items: MealItemDTO[]`, `notes`
- BudgetsDTO: `kcal`, `protein_g`, `fat_g`, `carb_g`, `source`

### Ошибки (коды)
- `E_INVALID_INPUT`
- `E_AI_UNAVAILABLE`
- `E_STORAGE_UNAVAILABLE`
- `E_RATE_LIMIT`

### События
- `meal.created` — после подтверждения приема пищи
- `profile.updated` — при изменении профиля/веса/цели
- `budgets.recalculated`

Форматы ответов REST: `{ "ok": true, "data": … } | { "ok": false, "error": { "code": "…", "message": "…" } }`

## Meals API

- GET `/api/meals?date=YYYY-MM-DD&telegram_id=...` → `{ ok, data: { items: Meal[] } }`
- GET `/api/meals/{id}?telegram_id=...` → `{ ok, data: Meal }`
- POST `/api/meals?telegram_id=...` body `MealCreate` → `{ ok, data: { id } }`
- PATCH `/api/meals/{id}?telegram_id=...` body `MealUpdate` → `{ ok, data: { updated: true } }`
- DELETE `/api/meals/{id}?telegram_id=...` → `{ ok, data: { deleted: true } }`

### MealCreate
```json
{
  "at": "2025-01-01T12:34:56Z",
  "type": "lunch",
  "status": "draft|confirmed",
  "items": [
    { "name": "chicken", "unit": "g", "amount": 150, "kcal": 165, "protein_g": 31, "fat_g": 3.6, "carb_g": 0 }
  ],
  "notes": "...",
  "source_chat_id": 123,
  "source_message_id": 456,
  "source_update_id": 789
}
```

### MealUpdate
```json
{
  "at": "2025-01-01T12:34:56Z",
  "type": "dinner",
  "status": "confirmed",
  "items": [ ... ],
  "notes": "..."
}
```

### Errors
- `E_DUPLICATE_MEAL_SOURCE` — нарушение идемпотентности (повторный `update_id`/`chat+message`)
- `E_VALIDATION` — некорректные значения (массы/БЖУ и др.)

